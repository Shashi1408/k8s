gcloud container clusters create k8s1 --region us-central1-c --num-nodes 2 --machine-type e2-micro

gcloud container clusters list

kubectl get nodes

kubectl get pods

kubectl run kubia --image=luksa/kubia --port=8080

gcloud container clusters delete k8s1 --region us-central1-c

# Create nginx deployment with 3 replicas
kubectl create deployment nginx-deployment --image=nginx:latest --replicas=3

# Expose the nginx deployment as a service with a LoadBalancer -- bind deployment with service
kubectl expose deployment nginx-deployment --name=nginx-service --port=80 --target-port=80 --type=LoadBalancer

# Create Tomcat deployment with 3 replicas
kubectl create deployment tomcat-deployment --image=tomcat:7 --replicas=3

# Expose the Tomcat deployment as a service with a LoadBalancer -- bind deployment with service
kubectl expose deployment tomcat-deployment --name=tomcat-service --port=8080 --target-port=8080 --type=LoadBalancer

# Verify the deployments, services, and pods
kubectl get deployments
kubectl get services
kubectl get pods

kubectl create deployment tomcat-deployment --image=sdharr14/sha_tc:1 --replicas=3

kubectl get deployment tomcat-deployment -o yaml | grep -i name

#sha-tc-7chzd needs to be obtained from previos step
kubectl set image deployment/tomcat-deployment sha-tc-7chzd=sdharr14/sha_tc:2
